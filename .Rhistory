#                    labels=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"),
#                    include.lowest = TRUE)
#
# total_prev <- total_prev %>%
#     group_by(month) %>%
#     summarise(mean.prev = mean(prevalence),
#               lower.ci.prev = quantile(prevalence, prob = 0.025),
#               upper.ci.prev = quantile(prevalence, prob = 0.975))
prevalence_plot <- total_prev %>%
ggplot(aes(x=time, y=mean, group = 1)) +
geom_line() +
geom_line(data = expected, aes(x = time, y = prevalence), color = "red") +
geom_ribbon(aes(ymin=lower.ci.prev, ymax=upper.ci.prev), linetype = 0, alpha = 0.2, stat = "identity", na.rm = TRUE) +
ylim(0, 1.0) +
theme_classic()+
theme(text=element_text(family="sans"), legend.title = element_text(size=11), legend.text = element_text(size=10))+
guides(colour = guide_legend(override.aes = list(size=2)))
ggsave(file="plots-herd-prevalence/piglet_7tp.pdf", plot = prevalence_plot, height = 15, width = 20, units = "cm")
library("SimInf")
library("tidyverse")
library("gridExtra")
library("ggsci")
library("ggpubr")
library("scales")
## prevalence over time over several iterations
iterations <- 100
tspan <- as.double(731:1096)
## low values
## loading the last low value fit, change into appropriate
load("7-timepoints-monthly-grouping/fit/fitted.Rda")
fit@model@tspan <- tspan
total_prev <- lapply(seq_len(iterations), function (x){
stats <- NULL
stats <- run(fit)
herd_prev <- prevalence(stats, Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish)
names(herd_prev) <- c("time", "prevalence")
herd_prev$iteration <- x
herd_prev$prevalence
##herd_prev
})
total_prev <- do.call("rbind", total_prev)
mean = colMeans(total_prev)
lower.ci.prev = apply(total_prev, 2, function(x) {
quantile(x, prob = 0.025)
})
upper.ci.prev = apply(total_prev, 2, function(x) {
quantile(x, prob = 0.975)
})
total_prev <- data.frame(time = tspan, mean = mean, lower.ci.prev = lower.ci.prev, upper.ci.prev = upper.ci.prev)
expected <- data.frame(time = c(731, 761, 791, 821, 851, 881, 911, 941, 971, 1001, 1031, 1061),
prevalence = c(0.200, 0.310, 0.420, 0.550, 0.700, 0.825, 0.950, 1.000, 1.000, 1.000, 1.000, 1.000))
# plot(y = mean, x = tspan, type = "s")
# lines(y = lower.ci.prev, x = tspan)
# lines(y = upper.ci.prev, x = tspan)
# total_prev <- do.call("rbind", total_prev)
#
# total_prev$month <- cut(total_prev$time,
#                    breaks=c(731, 761, 791, 821, 851, 881, 911, 941, 971, 1001, 1031, 1061, 1096),
#                    labels=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"),
#                    include.lowest = TRUE)
#
# total_prev <- total_prev %>%
#     group_by(month) %>%
#     summarise(mean.prev = mean(prevalence),
#               lower.ci.prev = quantile(prevalence, prob = 0.025),
#               upper.ci.prev = quantile(prevalence, prob = 0.975))
prevalence_plot <- total_prev %>%
ggplot(aes(x=time, y=mean, group = 1)) +
geom_line() +
geom_line(data = expected, aes(x = time, y = prevalence), color = "red") +
geom_ribbon(aes(ymin=lower.ci.prev, ymax=upper.ci.prev), linetype = 0, alpha = 0.2, stat = "identity", na.rm = TRUE) +
ylim(0, 1.0) +
theme_classic()+
theme(text=element_text(family="sans"), legend.title = element_text(size=11), legend.text = element_text(size=10))+
guides(colour = guide_legend(override.aes = list(size=2)))
ggsave(file="plots-herd-prevalence/oneparam_7tp.pdf", plot = prevalence_plot, height = 15, width = 20, units = "cm")
## low values
## loading the last low value fit, change into appropriate
load("norwegian/oneparam/fit/fitted.Rda")
View(fit)
fit@x[[16]] <- fit@x[[16]]*1.1
trajectory(run(fit))
plot(run(fit))
plot(prevalence(run(fit), Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish))
fit@x[[16]] <- fit@x[[16]]*1.1
plot(prevalence(run(fit), Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish))
fit@x[[16]] <- fit@x[[16]]*1.1
plot(prevalence(run(fit), Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish))
fit@x[[16]] <- fit@x[[16]]*1.1
plot(prevalence(run(fit), Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish))
fit@x[[16]]
fit@x[[16]] <- fit@x[[16]]*10
plot(prevalence(run(fit), Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish))
0.8705506^10
0.8705506^20
library("SimInf")
library("tidyverse")
library("gridExtra")
library("ggsci")
library("ggpubr")
library("scales")
## prevalence over time over several iterations
iterations <- 100
tspan <- as.double(731:1096)
## low values
## loading the last low value fit, change into appropriate
load("one-param-slow-decay/fit/fitted.Rda")
fit@model@tspan <- tspan
total_prev <- lapply(seq_len(iterations), function (x){
stats <- NULL
stats <- run(fit)
herd_prev <- prevalence(stats, Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish)
names(herd_prev) <- c("time", "prevalence")
herd_prev$iteration <- x
herd_prev$prevalence
##herd_prev
})
total_prev <- do.call("rbind", total_prev)
mean = colMeans(total_prev)
lower.ci.prev = apply(total_prev, 2, function(x) {
quantile(x, prob = 0.025)
})
upper.ci.prev = apply(total_prev, 2, function(x) {
quantile(x, prob = 0.975)
})
total_prev <- data.frame(time = tspan, mean = mean, lower.ci.prev = lower.ci.prev, upper.ci.prev = upper.ci.prev)
expected <- data.frame(time = c(731, 761, 791, 821, 851, 881, 911, 941, 971, 1001, 1031, 1061),
prevalence = c(0.200, 0.310, 0.420, 0.550, 0.700, 0.825, 0.950, 1.000, 1.000, 1.000, 1.000, 1.000))
# plot(y = mean, x = tspan, type = "s")
# lines(y = lower.ci.prev, x = tspan)
# lines(y = upper.ci.prev, x = tspan)
# total_prev <- do.call("rbind", total_prev)
#
# total_prev$month <- cut(total_prev$time,
#                    breaks=c(731, 761, 791, 821, 851, 881, 911, 941, 971, 1001, 1031, 1061, 1096),
#                    labels=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"),
#                    include.lowest = TRUE)
#
# total_prev <- total_prev %>%
#     group_by(month) %>%
#     summarise(mean.prev = mean(prevalence),
#               lower.ci.prev = quantile(prevalence, prob = 0.025),
#               upper.ci.prev = quantile(prevalence, prob = 0.975))
prevalence_plot <- total_prev %>%
ggplot(aes(x=time, y=mean, group = 1)) +
geom_line() +
geom_line(data = expected, aes(x = time, y = prevalence), color = "red") +
geom_ribbon(aes(ymin=lower.ci.prev, ymax=upper.ci.prev), linetype = 0, alpha = 0.2, stat = "identity", na.rm = TRUE) +
ylim(0, 1.0) +
theme_classic()+
theme(text=element_text(family="sans"), legend.title = element_text(size=11), legend.text = element_text(size=10))+
guides(colour = guide_legend(override.aes = list(size=2)))
ggsave(file="plots-herd-prevalence/oneparam_7tp.pdf", plot = prevalence_plot, height = 15, width = 20, units = "cm")
ggsave(file="plots-herd-prevalence/oneparam_7tp_slowdecay.pdf", plot = prevalence_plot, height = 15, width = 20, units = "cm")
library("SimInf")
library("tidyverse")
library("gridExtra")
library("ggsci")
library("ggpubr")
library("scales")
## prevalence over time over several iterations
iterations <- 100
tspan <- as.double(731:1096)
## low values
## loading the last low value fit, change into appropriate
load("one-param-slow-decay-herd/fit/fitted.Rda")
fit@model@tspan <- tspan
total_prev <- lapply(seq_len(iterations), function (x){
stats <- NULL
stats <- run(fit)
herd_prev <- prevalence(stats, Isows+Igilts+Ipiglets+Igrowers+Ifinish~Isows+Ssows+Igilts+Sgilts+Ipiglets+Spiglets+Igrowers+Sgrowers+Ifinish+Sfinish)
names(herd_prev) <- c("time", "prevalence")
herd_prev$iteration <- x
herd_prev$prevalence
##herd_prev
})
total_prev <- do.call("rbind", total_prev)
mean = colMeans(total_prev)
lower.ci.prev = apply(total_prev, 2, function(x) {
quantile(x, prob = 0.025)
})
upper.ci.prev = apply(total_prev, 2, function(x) {
quantile(x, prob = 0.975)
})
total_prev <- data.frame(time = tspan, mean = mean, lower.ci.prev = lower.ci.prev, upper.ci.prev = upper.ci.prev)
expected <- data.frame(time = c(731, 761, 791, 821, 851, 881, 911, 941, 971, 1001, 1031, 1061),
prevalence = c(0.200, 0.310, 0.420, 0.550, 0.700, 0.825, 0.950, 1.000, 1.000, 1.000, 1.000, 1.000))
# plot(y = mean, x = tspan, type = "s")
# lines(y = lower.ci.prev, x = tspan)
# lines(y = upper.ci.prev, x = tspan)
# total_prev <- do.call("rbind", total_prev)
#
# total_prev$month <- cut(total_prev$time,
#                    breaks=c(731, 761, 791, 821, 851, 881, 911, 941, 971, 1001, 1031, 1061, 1096),
#                    labels=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"),
#                    include.lowest = TRUE)
#
# total_prev <- total_prev %>%
#     group_by(month) %>%
#     summarise(mean.prev = mean(prevalence),
#               lower.ci.prev = quantile(prevalence, prob = 0.025),
#               upper.ci.prev = quantile(prevalence, prob = 0.975))
prevalence_plot <- total_prev %>%
ggplot(aes(x=time, y=mean, group = 1)) +
geom_line() +
geom_line(data = expected, aes(x = time, y = prevalence), color = "red") +
geom_ribbon(aes(ymin=lower.ci.prev, ymax=upper.ci.prev), linetype = 0, alpha = 0.2, stat = "identity", na.rm = TRUE) +
ylim(0, 1.0) +
theme_classic()+
theme(text=element_text(family="sans"), legend.title = element_text(size=11), legend.text = element_text(size=10))+
guides(colour = guide_legend(override.aes = list(size=2)))
ggsave(file="plots-herd-prevalence/oneparam_7tp_slowdecay_herd.pdf", plot = prevalence_plot, height = 15, width = 20, units = "cm")
-(log(1-0.02))/56
-(log(1-0.017))/99
-(log(1-0.177))/35
-log(1-0.3618)/2.23
-log(1-0.3618)/(1/365)
exp^(-0.184*365)
e^(-0.184*365)
exp(1)^(-0.184*365)
exp(1)^(-0.184*2.23)
66.6-(5.5+7.7)
log(0.534+0.55+0.77)/2.23
log(1-(0.534+0.55+0.77)/2.23
log(1-(0.534+0.55+0.77))/2.23
log(0.534+0.055+0.077)/2.23
log(0.53+0.055+0.077)/2.23
-log(0.53+0.055+0.077)/2.23
library("SimInf")
source("ldata.R")
source("maintenance_fun.R")
source("initialize_model_slow_decay.R") ## this file uses mparse and creates the model
load("one-param-slow-decay-herd/fit/fitted.Rda")
## target prevalence for last sampling timepoint, taken from group_prevalence.R
## order: ex_m1_tp7, ex_m2s_tp7, ex_m2p_tp7, ex_m3s_tp7, ex_m3p_tp7, ex_m4_tp7, ex_m5_tp7, ex_m6_tp7
expected <- c(0.7669446, 0.831539, 0.8369977, 0.856103, 0.8652008, 0.8579226, 0.9025018, 0.856103)
names(expected) = c("sow_m1_tp7", "sow_m2_tp7", "piglet_m2_tp7", "sow_m3_tp7", "piglet_m3_tp7", "grower_m4_tp7", "grower_m5_tp7", "finish_m6_tp7")
## df to match the discrete boxplot
exp_coupling <- data.frame(unit = c("sows_gest", "gilts_gest", "farrow_s", "farrow_s", "farrow_p", "farrow_p", "growers", "growers", "finishers"),
prevalence = c(expected[1], expected[1], expected[2], expected[4], expected[3], expected[5], expected[6], expected[7], expected[8]),
sample = c("m1", "m1", "m2", "m3", "m2", "m3", "m4", "m5", "m6"))
iterations <- 100
aggr_prev <- lapply(seq_len(iterations), function (x){
stats <- NULL
stats <- run(fit)
sows_breed <- prevalence(stats, Isows~Ssows+Isows, index = 1:15)
names(sows_breed) <- c("time", "sows_breed")
sows_breed$iteration <- x
gilts_breed <- prevalence(stats, Igilts~Sgilts+Igilts, index = 16:33)$prevalence
sows_gest <- prevalence(stats, Isows~Ssows+Isows, index = 34:68)$prevalence
gilts_gest <- prevalence(stats, Igilts~Sgilts+Igilts, index = 69:98)$prevalence
farrow_s <- prevalence(stats, Isows~Ssows+Isows, index = 99:254)$prevalence
farrow_p <- prevalence(stats, Ipiglets~Spiglets+Ipiglets, index = 99:254)$prevalence
growers <- prevalence(stats, Igrowers~Sgrowers+Igrowers, index = 255:540)$prevalence
finishers <- prevalence(stats, Ifinish~Ifinish+Sfinish, index = 541:1080)$prevalence
gilt_growers <- prevalence(stats, Igilts~Sgilts+Igilts, index = 1081:1105)$prevalence
cbind(sows_breed, gilts_breed, sows_gest, gilts_gest, farrow_s, farrow_p, growers, finishers, gilt_growers)
})
aggr_prev <- do.call("rbind", aggr_prev)
################
## transform into long form and take only the last observed date from the 8th sampling month
long_prev <- aggr_prev[aggr_prev$time == 969, -3] %>%
gather(key = "unit", value ="prevalence", sows_breed, sows_gest, gilts_breed, gilts_gest, farrow_s, farrow_p, growers, finishers, gilt_growers)
long_prev$unit <- factor(long_prev$unit, levels = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"))
herd_prev <- ggplot(long_prev, aes(x=unit, y=prevalence)) +
geom_boxplot() +
geom_point(data = exp_coupling, aes(x = unit, y = prevalence), colour = "blue") +
geom_text(data = exp_coupling, aes(label = sample), hjust=-0.5, vjust=0.3) +
ylim(c(0, 1.0)) +
scale_x_discrete(name = "Animal group",
breaks = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"),
labels = c("BrS", "BrG", "GeS", "GeG", "FaS", "FaP", "Gr", "Fi", "Gi" )) +
ylab("Prevalence") +
ggtitle("Prevalence / animal group, sep. transmission for finisher") +
stat_summary(fun =mean, geom="point", shape=20, size=3, color="red", fill="red") +
theme_classic() +
theme(text=element_text(family="sans"), plot.title = element_text(hjust = 0.5), plot.margin=unit(c(1,1,0,1),"cm"))
library("SimInf")
library("tidyverse")
library("gridExtra")
library("ggsci")
library("ggpubr")
library("scales")
load("one-param-slow-decay-herd/fit/fitted.Rda")
## target prevalence for last sampling timepoint, taken from group_prevalence.R
## order: ex_m1_tp7, ex_m2s_tp7, ex_m2p_tp7, ex_m3s_tp7, ex_m3p_tp7, ex_m4_tp7, ex_m5_tp7, ex_m6_tp7
expected <- c(0.7669446, 0.831539, 0.8369977, 0.856103, 0.8652008, 0.8579226, 0.9025018, 0.856103)
names(expected) = c("sow_m1_tp7", "sow_m2_tp7", "piglet_m2_tp7", "sow_m3_tp7", "piglet_m3_tp7", "grower_m4_tp7", "grower_m5_tp7", "finish_m6_tp7")
## df to match the discrete boxplot
exp_coupling <- data.frame(unit = c("sows_gest", "gilts_gest", "farrow_s", "farrow_s", "farrow_p", "farrow_p", "growers", "growers", "finishers"),
prevalence = c(expected[1], expected[1], expected[2], expected[4], expected[3], expected[5], expected[6], expected[7], expected[8]),
sample = c("m1", "m1", "m2", "m3", "m2", "m3", "m4", "m5", "m6"))
iterations <- 100
aggr_prev <- lapply(seq_len(iterations), function (x){
stats <- NULL
stats <- run(fit)
sows_breed <- prevalence(stats, Isows~Ssows+Isows, index = 1:15)
names(sows_breed) <- c("time", "sows_breed")
sows_breed$iteration <- x
gilts_breed <- prevalence(stats, Igilts~Sgilts+Igilts, index = 16:33)$prevalence
sows_gest <- prevalence(stats, Isows~Ssows+Isows, index = 34:68)$prevalence
gilts_gest <- prevalence(stats, Igilts~Sgilts+Igilts, index = 69:98)$prevalence
farrow_s <- prevalence(stats, Isows~Ssows+Isows, index = 99:254)$prevalence
farrow_p <- prevalence(stats, Ipiglets~Spiglets+Ipiglets, index = 99:254)$prevalence
growers <- prevalence(stats, Igrowers~Sgrowers+Igrowers, index = 255:540)$prevalence
finishers <- prevalence(stats, Ifinish~Ifinish+Sfinish, index = 541:1080)$prevalence
gilt_growers <- prevalence(stats, Igilts~Sgilts+Igilts, index = 1081:1105)$prevalence
cbind(sows_breed, gilts_breed, sows_gest, gilts_gest, farrow_s, farrow_p, growers, finishers, gilt_growers)
})
aggr_prev <- do.call("rbind", aggr_prev)
################
## transform into long form and take only the last observed date from the 8th sampling month
long_prev <- aggr_prev[aggr_prev$time == 969, -3] %>%
gather(key = "unit", value ="prevalence", sows_breed, sows_gest, gilts_breed, gilts_gest, farrow_s, farrow_p, growers, finishers, gilt_growers)
long_prev$unit <- factor(long_prev$unit, levels = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"))
herd_prev <- ggplot(long_prev, aes(x=unit, y=prevalence)) +
geom_boxplot() +
geom_point(data = exp_coupling, aes(x = unit, y = prevalence), colour = "blue") +
geom_text(data = exp_coupling, aes(label = sample), hjust=-0.5, vjust=0.3) +
ylim(c(0, 1.0)) +
scale_x_discrete(name = "Animal group",
breaks = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"),
labels = c("BrS", "BrG", "GeS", "GeG", "FaS", "FaP", "Gr", "Fi", "Gi" )) +
ylab("Prevalence") +
ggtitle("Prevalence / animal group, sep. transmission for finisher") +
stat_summary(fun =mean, geom="point", shape=20, size=3, color="red", fill="red") +
theme_classic() +
theme(text=element_text(family="sans"), plot.title = element_text(hjust = 0.5), plot.margin=unit(c(1,1,0,1),"cm"))
herd_prev
herd_prev <- ggplot(long_prev, aes(x=unit, y=prevalence)) +
geom_boxplot() +
geom_point(data = exp_coupling, aes(x = unit, y = prevalence), colour = "blue") +
geom_text(data = exp_coupling, aes(label = sample), hjust=-0.5, vjust=0.3) +
ylim(c(0, 1.0)) +
scale_x_discrete(name = "Animal group",
breaks = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"),
labels = c("BrS", "BrG", "GeS", "GeG", "FaS", "FaP", "Gr", "Fi", "Gi" )) +
ylab("Prevalence") +
ggtitle("Prevalence / animal group, herd level abc, slower decay") +
stat_summary(fun =mean, geom="point", shape=20, size=3, color="red", fill="red") +
theme_classic() +
theme(text=element_text(family="sans"), plot.title = element_text(hjust = 0.5), plot.margin=unit(c(1,1,0,1),"cm"))
herd_prev
ggsave(file="plots-group-prevalence/group_prevalence_1param_herd_slowdecay.pdf", plot = herd_prev, height = 15, width = 20, units = "cm")
library("SimInf")
library("tidyverse")
library("gridExtra")
library("ggsci")
library("ggpubr")
library("scales")
load("one-param-slow-decay/fit/fitted.Rda")
## target prevalence for last sampling timepoint, taken from group_prevalence.R
## order: ex_m1_tp7, ex_m2s_tp7, ex_m2p_tp7, ex_m3s_tp7, ex_m3p_tp7, ex_m4_tp7, ex_m5_tp7, ex_m6_tp7
expected <- c(0.7669446, 0.831539, 0.8369977, 0.856103, 0.8652008, 0.8579226, 0.9025018, 0.856103)
names(expected) = c("sow_m1_tp7", "sow_m2_tp7", "piglet_m2_tp7", "sow_m3_tp7", "piglet_m3_tp7", "grower_m4_tp7", "grower_m5_tp7", "finish_m6_tp7")
## df to match the discrete boxplot
exp_coupling <- data.frame(unit = c("sows_gest", "gilts_gest", "farrow_s", "farrow_s", "farrow_p", "farrow_p", "growers", "growers", "finishers"),
prevalence = c(expected[1], expected[1], expected[2], expected[4], expected[3], expected[5], expected[6], expected[7], expected[8]),
sample = c("m1", "m1", "m2", "m3", "m2", "m3", "m4", "m5", "m6"))
iterations <- 100
aggr_prev <- lapply(seq_len(iterations), function (x){
stats <- NULL
stats <- run(fit)
sows_breed <- prevalence(stats, Isows~Ssows+Isows, index = 1:15)
names(sows_breed) <- c("time", "sows_breed")
sows_breed$iteration <- x
gilts_breed <- prevalence(stats, Igilts~Sgilts+Igilts, index = 16:33)$prevalence
sows_gest <- prevalence(stats, Isows~Ssows+Isows, index = 34:68)$prevalence
gilts_gest <- prevalence(stats, Igilts~Sgilts+Igilts, index = 69:98)$prevalence
farrow_s <- prevalence(stats, Isows~Ssows+Isows, index = 99:254)$prevalence
farrow_p <- prevalence(stats, Ipiglets~Spiglets+Ipiglets, index = 99:254)$prevalence
growers <- prevalence(stats, Igrowers~Sgrowers+Igrowers, index = 255:540)$prevalence
finishers <- prevalence(stats, Ifinish~Ifinish+Sfinish, index = 541:1080)$prevalence
gilt_growers <- prevalence(stats, Igilts~Sgilts+Igilts, index = 1081:1105)$prevalence
cbind(sows_breed, gilts_breed, sows_gest, gilts_gest, farrow_s, farrow_p, growers, finishers, gilt_growers)
})
aggr_prev <- do.call("rbind", aggr_prev)
################
## transform into long form and take only the last observed date from the 8th sampling month
long_prev <- aggr_prev[aggr_prev$time == 969, -3] %>%
gather(key = "unit", value ="prevalence", sows_breed, sows_gest, gilts_breed, gilts_gest, farrow_s, farrow_p, growers, finishers, gilt_growers)
long_prev$unit <- factor(long_prev$unit, levels = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"))
herd_prev <- ggplot(long_prev, aes(x=unit, y=prevalence)) +
geom_boxplot() +
geom_point(data = exp_coupling, aes(x = unit, y = prevalence), colour = "blue") +
geom_text(data = exp_coupling, aes(label = sample), hjust=-0.5, vjust=0.3) +
ylim(c(0, 1.0)) +
scale_x_discrete(name = "Animal group",
breaks = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"),
labels = c("BrS", "BrG", "GeS", "GeG", "FaS", "FaP", "Gr", "Fi", "Gi" )) +
ylab("Prevalence") +
ggtitle("Prevalence / animal group, herd level abc, slower decay") +
stat_summary(fun =mean, geom="point", shape=20, size=3, color="red", fill="red") +
theme_classic() +
theme(text=element_text(family="sans"), plot.title = element_text(hjust = 0.5), plot.margin=unit(c(1,1,0,1),"cm"))
ggsave(file="plots-group-prevalence/group_prevalence_1param_grouped_slowdecay.pdf", plot = herd_prev, height = 15, width = 20, units = "cm")
herd_prev <- ggplot(long_prev, aes(x=unit, y=prevalence)) +
geom_boxplot() +
geom_point(data = exp_coupling, aes(x = unit, y = prevalence), colour = "blue") +
geom_text(data = exp_coupling, aes(label = sample), hjust=-0.5, vjust=0.3) +
ylim(c(0, 1.0)) +
scale_x_discrete(name = "Animal group",
breaks = c("sows_breed", "gilts_breed", "sows_gest", "gilts_gest", "farrow_s", "farrow_p", "growers", "finishers", "gilt_growers"),
labels = c("BrS", "BrG", "GeS", "GeG", "FaS", "FaP", "Gr", "Fi", "Gi" )) +
ylab("Prevalence") +
ggtitle("Prevalence / animal group, group level abc, slower decay") +
stat_summary(fun =mean, geom="point", shape=20, size=3, color="red", fill="red") +
theme_classic() +
theme(text=element_text(family="sans"), plot.title = element_text(hjust = 0.5), plot.margin=unit(c(1,1,0,1),"cm"))
ggsave(file="plots-group-prevalence/group_prevalence_1param_grouped_slowdecay.pdf", plot = herd_prev, height = 15, width = 20, units = "cm")
(-log(404.123/500))/365
(-log(1-0.3618))/365
(-log(404.123/500))/(2*35)
(-log(404.123/500))/35
log(1-0.3618)/70
-log(1-0.3618)/70
-log(1-0.3618)/35
2.23/95.88
2.23/95.877
log(1-0.3618)/2.23
-log(1-0.3618)/2.23
setwd("~/LA-MRSA")
## run the model with premade events and all animals infected at d730
## NOTE! With the pre-generated events, the result -dataframe countdown column is unaltered (99999),
## even when there are animals in the pen
library("SimInf")
source("R/init_model_d730.R")
source("R/maintenance_fun.R")
source("R/prevalence_percentile.R")
## pre-generated events from day 731-3000. All nimals infected at day 730.
events <- read.csv("events/events-d731-3000-2002.csv", header = TRUE)
model@tspan <- as.double(731:3000)
model@events <- SimInf_events(model@events@E, model@events@N, events)
final_result <- trajectory(run(model))
iterations <- 100
aggr_adults <- lapply(seq_len(iterations), function (x){
herd <- NULL
total <- NULL
herd<- trajectory(run(model))
herd <- herd[!(herd$pentype == 12),]
sowsums <- aggregate(herd[, c(1, 3:6)], by=list(herd$time), sum)
sowsums <- sowsums[,3:6]
total$time <- unique(herd$time)
total$sums <- apply(sowsums, 1, sum)
total$iteration <- x
total <- as.data.frame(total)
names(total) <- c("time", "total", "iteration")
total
})
aggr_adults <- do.call("rbind", aggr_adults)
median_adults <- aggregate(aggr_adults$total, by = list(aggr_adults$time), FUN = "median")
sow_sums_iter<- ggplot(median_adults,
aes(x=Group.1, y = x)) +
geom_point(size= 0.2, alpha = 0.5, na.rm = TRUE) +
xlab("Time (days)") +
ylab("Number of sows and gilts") +
scale_x_continuous(breaks=seq(0, 3000, by = 500)) +
scale_y_continuous(limits = c(0, 600), breaks=seq(0, 600, by = 100)) +
labs(title="a. Total number of sows and gilts per day") +
theme_classic(base_size = 8)
gilt_prop_plot
sow_sums_iter
gilt_gest <- herd[herd$pentype == 6,]
all_gest <- herd[herd$pentype %in% c(5,6),]
## aggregate the animal sums per day and sum S+I compartments
gilt_gest_sums<- aggregate(gilt_gest[, 5:6], by=list(gilt_gest$time), sum)
gilt_gest_sums$tot <- gilt_gest_sums$Sgilts + gilt_gest_sums$Igilts
all_gest_sums <- aggregate(all_gest[, 3:6], by=list(all_gest$time), sum)
all_gest_sums$tot <- all_gest_sums$Ssows + all_gest_sums$Isows + all_gest_sums$Sgilts + all_gest_sums$Igilts
## create a new data frame with the gilt sums & total of adult animals in gestation, calculate the proportion
gilt_prop <- data.frame(time = all_gest_sums$Group.1, gilts = gilt_gest_sums$tot, all = all_gest_sums$tot)
gilt_prop$prop <- gilt_prop$gilts / gilt_prop$all
gilt_prop_plot <- ggplot(gilt_prop, aes(x=time, y=prop)) +
geom_point(na.rm = TRUE)+
xlab("Time") +
ylab("Proportion") +
labs(title="Proportion of gilts in gestation") +
theme_gray()
##########
## proportion of gilts of all animals in the gestation unit
## take only gestation pens
gilt_gest <- herd[herd$pentype == 6,]
herd <- trajectory(stats)
## prevalences for each compartments
## result needs to be generated without trajectory(), run lines 1:15 from preset.R first
stats <- run(model)
herd <- trajectory(stats)
##########
## proportion of gilts of all animals in the gestation unit
## take only gestation pens
gilt_gest <- herd[herd$pentype == 6,]
all_gest <- herd[herd$pentype %in% c(5,6),]
## aggregate the animal sums per day and sum S+I compartments
gilt_gest_sums<- aggregate(gilt_gest[, 5:6], by=list(gilt_gest$time), sum)
gilt_gest_sums$tot <- gilt_gest_sums$Sgilts + gilt_gest_sums$Igilts
all_gest_sums <- aggregate(all_gest[, 3:6], by=list(all_gest$time), sum)
all_gest_sums$tot <- all_gest_sums$Ssows + all_gest_sums$Isows + all_gest_sums$Sgilts + all_gest_sums$Igilts
## create a new data frame with the gilt sums & total of adult animals in gestation, calculate the proportion
gilt_prop <- data.frame(time = all_gest_sums$Group.1, gilts = gilt_gest_sums$tot, all = all_gest_sums$tot)
gilt_prop$prop <- gilt_prop$gilts / gilt_prop$all
gilt_prop_plot <- ggplot(gilt_prop, aes(x=time, y=prop)) +
geom_point(na.rm = TRUE)+
xlab("Time") +
ylab("Proportion") +
labs(title="Proportion of gilts in gestation") +
theme_gray()
gilt_prop_plot
mean_gilts <- mean(gilt_prop$prop[gilt_prop$time > 1000], na.rm = TRUE)
med_gilts <- median(gilt_prop$prop[gilt_prop$time > 1000], na.rm = TRUE)
names(med_gilts)<- "median"
med_gilts <- c(med_gilts, quantile(gilt_prop$prop[gilt_prop$time > 1000], na.rm = TRUE, probs=c(0.05, 0.95)))
med_gilts
